{"version":3,"file":"component---src-templates-tags-js-a8c5cee17b22b525cf65.js","mappings":"qMAkEA,UA5Da,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeJ,EAAN,KAAcG,EAAd,SACE,IAAfA,EAAmB,GAAK,KAE1B,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKE,MAAOD,EAAWE,YAAaN,EAAKO,SAAUP,IACnD,uBAAKQ,UAAU,aACb,0BAAKJ,IAENF,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,2BAASF,UAAU,OAAOG,IAAKD,EAAKE,OAAOC,MACxCH,EAAKI,YAAYC,KAChBL,EAAKI,YAAYC,IAAIC,iBACrBN,EAAKI,YAAYC,IAAIC,gBAAgBC,OACnC,gBAAC,EAAAC,KAAD,CACEC,GAAIT,EAAKE,OAAOC,KAChBL,UAAU,iBACVY,MAAO,CACLC,gBAAgB,OAAQX,EAAKI,YAAYC,IAAIC,gBAAgBC,MAAMK,IAApD,OAIvB,uBAAKd,UAAU,gBACb,uBAAKA,UAAU,mBACb,wBAAMA,UAAU,cAEZe,EAAAA,EAAAA,GAAYb,EAAKI,YAAYU,MAFjC,QAKA,wBAAMhB,UAAU,cACbE,EAAKe,WADR,IACwC,GAAnBf,EAAKe,WAAkB,SAAW,YAGzD,sBAAIjB,UAAU,cACZ,gBAAC,EAAAU,KAAD,CAAMC,GAAIT,EAAKE,OAAOC,MAAOH,EAAKI,YAAYT,QAEhD,yBAAIK,EAAKI,YAAYR,YAArB,IAAmCI,EAAKgB,QAAQC,WAAWC,QAAQ,gBAAiB,KACpF,uBAAKpB,UAAU,aACZE,EAAKI,YAAYe,MAChBnB,EAAKI,YAAYe,KAAKpB,KAAI,SAAAT,GAAG,OAC3B,wBAAMW,IAAKX,GACT,gBAAC,EAAAkB,KAAD,CAAMV,UAAU,MAAMW,GAAE,SAAW,IAAUnB,GAArB,KAAxB,IAAwDA,aAQxE,uBAAKQ,UAAU,aACb,gBAAC,EAAAU,KAAD,CAAMC,GAAG,QAAQX,UAAU,eAA3B","sources":["webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport SEO from '../components/seo'\nimport DefaultLayout, { ConvertDate }  from '../components/layout';\nimport { kebabCase } from 'lodash';\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${tag}: ${totalCount} post${\n    totalCount === 1 ? '' : 's'}`;\n\n  return (\n    <DefaultLayout>\n      <SEO title={tagHeader} description={tag} keywords={tag} />\n      <div className=\"container\">\n        <h1>{tagHeader}</h1>\n      </div>\n      {edges.map(({ node }) => {\n        return (\n          <article className=\"post\" key={node.fields.slug}>\n            {node.frontmatter.img &&\n              node.frontmatter.img.childImageSharp &&\n              node.frontmatter.img.childImageSharp.fluid && (\n                <Link\n                  to={node.fields.slug}\n                  className=\"post-thumbnail\"\n                  style={{\n                    backgroundImage: `url(${node.frontmatter.img.childImageSharp.fluid.src})`,\n                  }}\n                />\n              )}\n            <div className=\"post-content\">\n              <div className=\"post-headeritem\">\n                <span className=\"post-date\">\n                  {\n                    ConvertDate(node.frontmatter.date)\n                  }&nbsp;&nbsp;—&nbsp;\n                </span>\n                <span className=\"post-words\">\n                  {node.timeToRead} {node.timeToRead == 1 ? 'minuto' : 'minutos'}\n                </span>\n              </div>\n              <h2 className=\"post-title\">\n                <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n              </h2>\n              <p>{node.frontmatter.description} {node.excerpt.toString().replace('Generic badge', '')}</p>\n              <div className=\"post-tags\">\n                {node.frontmatter.tags &&\n                  node.frontmatter.tags.map(tag => (\n                    <span key={tag}>\n                      <Link className=\"tag\" to={`/tags/${kebabCase(tag)}/`}>#{tag}</Link>\n                    </span>\n                  ))}\n              </div>\n            </div>\n          </article>\n        )\n      })}\n      <div className=\"container\">\n        <Link to=\"/tags\" className=\"newer-posts\">← Tags</Link>\n      </div>\n    </DefaultLayout>\n  );\n};\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"YYYY, MMM DD\")\n            title\n            description\n            tags\n            img {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  aspectRatio\n                  base64\n                  sizes\n                  src\n                  srcSet\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","title","description","keywords","className","map","node","key","fields","slug","frontmatter","img","childImageSharp","fluid","Link","to","style","backgroundImage","src","ConvertDate","date","timeToRead","excerpt","toString","replace","tags"],"sourceRoot":""}